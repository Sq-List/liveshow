<?xml version="1.0" encoding="UTF-8" ?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd" >
<mapper namespace="org.liveshow.dao.DarkroomDanmakuMapper">
	<resultMap id="BaseResultMap" type="org.liveshow.entity.DarkroomDanmaku">
		<constructor>
			<idArg column="id" jdbcType="INTEGER" javaType="java.lang.Integer"/>
			<arg column="danmaku_id" jdbcType="INTEGER" javaType="java.lang.Integer"/>
			<arg column="hours" jdbcType="INTEGER" javaType="java.lang.Integer"/>
			<arg column="time" jdbcType="INTEGER" javaType="java.lang.Integer"/>
			<arg column="state" jdbcType="BIT" javaType="java.lang.Boolean"/>
		</constructor>
	</resultMap>
	<sql id="Example_Where_Clause">
		<where>
			<foreach collection="oredCriteria" item="criteria" separator="or">
				<if test="criteria.valid">
					<trim prefix="(" suffix=")" prefixOverrides="and">
						<foreach collection="criteria.criteria" item="criterion">
							<choose>
								<when test="criterion.noValue">
									and ${criterion.condition}
								</when>
								<when test="criterion.singleValue">
									and ${criterion.condition} #{criterion.value}
								</when>
								<when test="criterion.betweenValue">
									and ${criterion.condition} #{criterion.value} and #{criterion.secondValue}
								</when>
								<when test="criterion.listValue">
									and ${criterion.condition}
									<foreach collection="criterion.value" item="listItem" open="(" close=")"
									         separator=",">
										#{listItem}
									</foreach>
								</when>
							</choose>
						</foreach>
					</trim>
				</if>
			</foreach>
		</where>
	</sql>
	<sql id="Update_By_Example_Where_Clause">
		<where>
			<foreach collection="example.oredCriteria" item="criteria" separator="or">
				<if test="criteria.valid">
					<trim prefix="(" suffix=")" prefixOverrides="and">
						<foreach collection="criteria.criteria" item="criterion">
							<choose>
								<when test="criterion.noValue">
									and ${criterion.condition}
								</when>
								<when test="criterion.singleValue">
									and ${criterion.condition} #{criterion.value}
								</when>
								<when test="criterion.betweenValue">
									and ${criterion.condition} #{criterion.value} and #{criterion.secondValue}
								</when>
								<when test="criterion.listValue">
									and ${criterion.condition}
									<foreach collection="criterion.value" item="listItem" open="(" close=")"
									         separator=",">
										#{listItem}
									</foreach>
								</when>
							</choose>
						</foreach>
					</trim>
				</if>
			</foreach>
		</where>
	</sql>
	<sql id="Base_Column_List">
    id, danmaku_id, hours, time, state
  </sql>
	<select id="selectByExample" resultMap="BaseResultMap" parameterType="org.liveshow.entity.DarkroomDanmakuExample">
		select
		<if test="distinct">
			distinct
		</if>
		<include refid="Base_Column_List"/>
		from darkroom_danmaku
		<if test="_parameter != null">
			<include refid="Example_Where_Clause"/>
		</if>
		<if test="orderByClause != null">
			order by ${orderByClause}
		</if>
	</select>
	<select id="selectByPrimaryKey" resultMap="BaseResultMap" parameterType="java.lang.Integer">
		select
		<include refid="Base_Column_List"/>
		from darkroom_danmaku
		where id = #{id,jdbcType=INTEGER}
	</select>
	<delete id="deleteByPrimaryKey" parameterType="java.lang.Integer">
    delete from darkroom_danmaku
    where id = #{id,jdbcType=INTEGER}
  </delete>
	<delete id="deleteByExample" parameterType="org.liveshow.entity.DarkroomDanmakuExample">
		delete from darkroom_danmaku
		<if test="_parameter != null">
			<include refid="Example_Where_Clause"/>
		</if>
	</delete>
	<insert id="insert" parameterType="org.liveshow.entity.DarkroomDanmaku">
    insert into darkroom_danmaku (id, danmaku_id, hours, 
      time, state)
    values (#{id,jdbcType=INTEGER}, #{danmakuId,jdbcType=INTEGER}, #{hours,jdbcType=INTEGER}, 
      #{time,jdbcType=INTEGER}, #{state,jdbcType=BIT})
  </insert>
	<insert id="insertSelective" parameterType="org.liveshow.entity.DarkroomDanmaku">
		insert into darkroom_danmaku
		<trim prefix="(" suffix=")" suffixOverrides=",">
			<if test="id != null">
				id,
			</if>
			<if test="danmakuId != null">
				danmaku_id,
			</if>
			<if test="hours != null">
				hours,
			</if>
			<if test="time != null">
				time,
			</if>
			<if test="state != null">
				state,
			</if>
		</trim>
		<trim prefix="values (" suffix=")" suffixOverrides=",">
			<if test="id != null">
				#{id,jdbcType=INTEGER},
			</if>
			<if test="danmakuId != null">
				#{danmakuId,jdbcType=INTEGER},
			</if>
			<if test="hours != null">
				#{hours,jdbcType=INTEGER},
			</if>
			<if test="time != null">
				#{time,jdbcType=INTEGER},
			</if>
			<if test="state != null">
				#{state,jdbcType=BIT},
			</if>
		</trim>
	</insert>
	<select id="countByExample" parameterType="org.liveshow.entity.DarkroomDanmakuExample"
	        resultType="java.lang.Integer">
		select count(*) from darkroom_danmaku
		<if test="_parameter != null">
			<include refid="Example_Where_Clause"/>
		</if>
	</select>
	<update id="updateByExampleSelective" parameterType="map">
		update darkroom_danmaku
		<set>
			<if test="record.id != null">
				id = #{record.id,jdbcType=INTEGER},
			</if>
			<if test="record.danmakuId != null">
				danmaku_id = #{record.danmakuId,jdbcType=INTEGER},
			</if>
			<if test="record.hours != null">
				hours = #{record.hours,jdbcType=INTEGER},
			</if>
			<if test="record.time != null">
				time = #{record.time,jdbcType=INTEGER},
			</if>
			<if test="record.state != null">
				state = #{record.state,jdbcType=BIT},
			</if>
		</set>
		<if test="_parameter != null">
			<include refid="Update_By_Example_Where_Clause"/>
		</if>
	</update>
	<update id="updateByExample" parameterType="map">
		update darkroom_danmaku
		set id = #{record.id,jdbcType=INTEGER},
		danmaku_id = #{record.danmakuId,jdbcType=INTEGER},
		hours = #{record.hours,jdbcType=INTEGER},
		time = #{record.time,jdbcType=INTEGER},
		state = #{record.state,jdbcType=BIT}
		<if test="_parameter != null">
			<include refid="Update_By_Example_Where_Clause"/>
		</if>
	</update>
	<update id="updateByPrimaryKeySelective" parameterType="org.liveshow.entity.DarkroomDanmaku">
		update darkroom_danmaku
		<set>
			<if test="danmakuId != null">
				danmaku_id = #{danmakuId,jdbcType=INTEGER},
			</if>
			<if test="hours != null">
				hours = #{hours,jdbcType=INTEGER},
			</if>
			<if test="time != null">
				time = #{time,jdbcType=INTEGER},
			</if>
			<if test="state != null">
				state = #{state,jdbcType=BIT},
			</if>
		</set>
		where id = #{id,jdbcType=INTEGER}
	</update>
	<update id="updateByPrimaryKey" parameterType="org.liveshow.entity.DarkroomDanmaku">
    update darkroom_danmaku
    set danmaku_id = #{danmakuId,jdbcType=INTEGER},
      hours = #{hours,jdbcType=INTEGER},
      time = #{time,jdbcType=INTEGER},
      state = #{state,jdbcType=BIT}
    where id = #{id,jdbcType=INTEGER}
  </update>

	<select id="isDark" resultType="org.liveshow.entity.DarkroomDanmaku">
		SELECT
			c.*
		FROM
			`user` a,
			danmaku b,
			darkroom_danmaku c
		WHERE
			a.id = b.user_id
		AND
			b.id = c.danmaku_id
		AND
			(c.time + c.hours > unix_timestamp(now()) OR state = 0)
		AND
		 	a.id = #{userId}
		AND
		 	b.room_id = #{roomId}
		ORDER BY
		  	c.time
  </select>

	<select id="selectExpiredByUserId" resultType="org.liveshow.entity.DarkroomDanmaku">
		SELECT
			u.nick_name "danmaku.user.nickName",
			d.reason "danmaku.reason",
			dd.id,
			dd.hours,
			dd.time,
			dd.state
		FROM
			`user` u,
			danmaku d,
			darkroom_danmaku dd
		<where>
				dd.danmaku_id = d.id
			AND
				d.user_id = u.id
			<if test="state == true">
				AND
						(
						dd.time + dd.hours > unix_timestamp(now())
						OR
						dd.state = 1
					)
			</if>
			<if test="state == false">
				AND
					dd.time + dd.hours &lt; unix_timestamp(now())
				AND
					dd.state = 0
			</if>
			<if test="userId != 0">
				AND
					r.user_id = #{userId}
			</if>
		</where>
	</select>

	<update id="cancelMute" parameterType="int">
		UPDATE
			darkroom_danmaku
		SET
			state = 1
		WHERE
	  		id = #{id}
	</update>

	<select id="selectManagerMuteByModuleIdAndState" resultType="org.liveshow.entity.CombinationEntity.ManagerDarkroomDanma">
		SELECT
			dd.id "darkRoomDanmaId",
			u.login_name "loginName",
			u.nick_name "nickName",
			d.room_id "roomId",
			m.name "moduleName",
			d.content "danmaContent",
			dd.time "startTime",
			dd.hours "endTime",
			dd.state "state"
		FROM
			`user` u,
			danmaku d,
			room r,
			darkroom_danmaku dd,
			module m
		<where>
			dd.danmaku_id = d.id
			AND
				d.user_id = u.id
			AND
				d.room_id = r.id
			AND
				r.module_id = m.id
			<if test="moduleId != 0">
			AND
				m.id = #{moduleId}
			</if>
			<if test="state == true">
				AND
					(
						dd.time + dd.hours &lt; unix_timestamp(now())
					OR
						dd.state = 1
					)
			</if>
			<if test="state == false">
				AND
					dd.time + dd.hours > unix_timestamp(now())
				AND
					dd.state = 0
			</if>
		</where>
	</select>

	<select id="countDarkDanmakuNumByModule" resultType="org.liveshow.entity.CombinationEntity.ManagerDarkroomNumByModule">
		SELECT
			m.id "moduleId",
			m.`name` "name",
			IFNULL(tmp.value, 0) "value"
		FROM
			module m
		LEFT JOIN (
			SELECT
				r.module_id,
				COUNT(*) value
			FROM
				room r,
				darkroom_danmaku dd
			LEFT JOIN danmaku d ON dd.danmaku_id = d.id
			WHERE
				dd.time + dd.hours > unix_timestamp(now())
			AND dd.state = 0
			AND d.room_id = r.id
			GROUP BY
				r.module_id
		) tmp ON tmp.module_id = m.id
		GROUP BY
			m.`name`
	</select>

	<select id="countDarkDanmakuNumByDate" resultType="org.liveshow.entity.CombinationEntity.ManagerDarkroomNumByDate">
		SELECT
			DATE_FORMAT(
				DATE_ADD(NOW(), INTERVAL #{i} DAY),
				'%Y-%m-%d'
			) "date",
			COUNT(*) 'num'
		FROM
			darkroom_danmaku dd
		WHERE
			DATE_FORMAT(
				from_unixtime(dd.time),
				'%Y-%m-%d'
			) = DATE_FORMAT(
				DATE_ADD(NOW(), INTERVAL #{i} DAY),
				'%Y-%m-%d'
			)
	</select>
</mapper>
