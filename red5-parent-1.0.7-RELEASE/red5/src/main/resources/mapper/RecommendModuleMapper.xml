<?xml version="1.0" encoding="UTF-8" ?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd" >
<mapper namespace="org.liveshow.dao.RecommendModuleMapper" >
  <resultMap id="BaseResultMap" type="org.liveshow.entity.RecommendModule" >
    <constructor >
      <idArg column="id" jdbcType="INTEGER" javaType="java.lang.Integer" />
      <arg column="module_id" jdbcType="INTEGER" javaType="java.lang.Integer" />
      <arg column="type" jdbcType="BIT" javaType="java.lang.Boolean" />
      <arg column="reco_time" jdbcType="INTEGER" javaType="java.lang.Integer" />
    </constructor>
  </resultMap>
  <resultMap id="PresentModule" type="org.liveshow.entity.CombinationEntity.RecommendModulePresent">
    <id property="id" column="id"/>
    <result property="moduleId" column="module_id"/>
    <result property="type" column="type"/>
    <result property="recoTime" column="reco_time"/>
    <result property="partId" column="part_id"/>
  </resultMap>
  <sql id="Example_Where_Clause" >
    <where >
      <foreach collection="oredCriteria" item="criteria" separator="or" >
        <if test="criteria.valid" >
          <trim prefix="(" suffix=")" prefixOverrides="and" >
            <foreach collection="criteria.criteria" item="criterion" >
              <choose >
                <when test="criterion.noValue" >
                  and ${criterion.condition}
                </when>
                <when test="criterion.singleValue" >
                  and ${criterion.condition} #{criterion.value}
                </when>
                <when test="criterion.betweenValue" >
                  and ${criterion.condition} #{criterion.value} and #{criterion.secondValue}
                </when>
                <when test="criterion.listValue" >
                  and ${criterion.condition}
                  <foreach collection="criterion.value" item="listItem" open="(" close=")" separator="," >
                    #{listItem}
                  </foreach>
                </when>
              </choose>
            </foreach>
          </trim>
        </if>
      </foreach>
    </where>
  </sql>
  <sql id="Update_By_Example_Where_Clause" >
    <where >
      <foreach collection="example.oredCriteria" item="criteria" separator="or" >
        <if test="criteria.valid" >
          <trim prefix="(" suffix=")" prefixOverrides="and" >
            <foreach collection="criteria.criteria" item="criterion" >
              <choose >
                <when test="criterion.noValue" >
                  and ${criterion.condition}
                </when>
                <when test="criterion.singleValue" >
                  and ${criterion.condition} #{criterion.value}
                </when>
                <when test="criterion.betweenValue" >
                  and ${criterion.condition} #{criterion.value} and #{criterion.secondValue}
                </when>
                <when test="criterion.listValue" >
                  and ${criterion.condition}
                  <foreach collection="criterion.value" item="listItem" open="(" close=")" separator="," >
                    #{listItem}
                  </foreach>
                </when>
              </choose>
            </foreach>
          </trim>
        </if>
      </foreach>
    </where>
  </sql>
  <sql id="Base_Column_List" >
    id, module_id, type, reco_time
  </sql>
  <select id="selectByExample" resultMap="BaseResultMap" parameterType="org.liveshow.entity.RecommendModuleExample" >
    select
    <if test="distinct" >
      distinct
    </if>
    <include refid="Base_Column_List" />
    from recommend_module
    <if test="_parameter != null" >
      <include refid="Example_Where_Clause" />
    </if>
    <if test="orderByClause != null" >
      order by ${orderByClause}
    </if>
  </select>
  <select id="selectByPrimaryKey" resultMap="BaseResultMap" parameterType="java.lang.Integer" >
    select 
    <include refid="Base_Column_List" />
    from recommend_module
    where id = #{id,jdbcType=INTEGER}
  </select>
  <delete id="deleteByPrimaryKey" parameterType="java.lang.Integer" >
    delete from recommend_module
    where id = #{id,jdbcType=INTEGER}
  </delete>
  <delete id="deleteByExample" parameterType="org.liveshow.entity.RecommendModuleExample" >
    delete from recommend_module
    <if test="_parameter != null" >
      <include refid="Example_Where_Clause" />
    </if>
  </delete>
  <insert id="insert" parameterType="org.liveshow.entity.RecommendModule" >
    insert into recommend_module (id, module_id, type, 
      reco_time)
    values (#{id,jdbcType=INTEGER}, #{moduleId,jdbcType=INTEGER}, #{type,jdbcType=BIT}, 
      #{recoTime,jdbcType=INTEGER})
  </insert>
  <insert id="insertSelective" parameterType="org.liveshow.entity.RecommendModule" >
    insert into recommend_module
    <trim prefix="(" suffix=")" suffixOverrides="," >
      <if test="id != null" >
        id,
      </if>
      <if test="moduleId != null" >
        module_id,
      </if>
      <if test="type != null" >
        type,
      </if>
      <if test="recoTime != null" >
        reco_time,
      </if>
    </trim>
    <trim prefix="values (" suffix=")" suffixOverrides="," >
      <if test="id != null" >
        #{id,jdbcType=INTEGER},
      </if>
      <if test="moduleId != null" >
        #{moduleId,jdbcType=INTEGER},
      </if>
      <if test="type != null" >
        #{type,jdbcType=BIT},
      </if>
      <if test="recoTime != null" >
        #{recoTime,jdbcType=INTEGER},
      </if>
    </trim>
  </insert>
  <select id="countByExample" parameterType="org.liveshow.entity.RecommendModuleExample" resultType="java.lang.Integer" >
    select count(*) from recommend_module
    <if test="_parameter != null" >
      <include refid="Example_Where_Clause" />
    </if>
  </select>
  <update id="updateByExampleSelective" parameterType="map" >
    update recommend_module
    <set >
      <if test="record.id != null" >
        id = #{record.id,jdbcType=INTEGER},
      </if>
      <if test="record.moduleId != null" >
        module_id = #{record.moduleId,jdbcType=INTEGER},
      </if>
      <if test="record.type != null" >
        type = #{record.type,jdbcType=BIT},
      </if>
      <if test="record.recoTime != null" >
        reco_time = #{record.recoTime,jdbcType=INTEGER},
      </if>
    </set>
    <if test="_parameter != null" >
      <include refid="Update_By_Example_Where_Clause" />
    </if>
  </update>
  <update id="updateByExample" parameterType="map" >
    update recommend_module
    set id = #{record.id,jdbcType=INTEGER},
      module_id = #{record.moduleId,jdbcType=INTEGER},
      type = #{record.type,jdbcType=BIT},
      reco_time = #{record.recoTime,jdbcType=INTEGER}
    <if test="_parameter != null" >
      <include refid="Update_By_Example_Where_Clause" />
    </if>
  </update>
  <update id="updateByPrimaryKeySelective" parameterType="org.liveshow.entity.RecommendModule" >
    update recommend_module
    <set >
      <if test="moduleId != null" >
        module_id = #{moduleId,jdbcType=INTEGER},
      </if>
      <if test="type != null" >
        type = #{type,jdbcType=BIT},
      </if>
      <if test="recoTime != null" >
        reco_time = #{recoTime,jdbcType=INTEGER},
      </if>
    </set>
    where id = #{id,jdbcType=INTEGER}
  </update>
  <update id="updateByPrimaryKey" parameterType="org.liveshow.entity.RecommendModule" >
    update recommend_module
    set module_id = #{moduleId,jdbcType=INTEGER},
      type = #{type,jdbcType=BIT},
      reco_time = #{recoTime,jdbcType=INTEGER}
    where id = #{id,jdbcType=INTEGER}
  </update>
  
  <select id="findRecoModule" resultType="org.liveshow.entity.CombinationEntity.RecommendModulAndInfo">
    SELECT a.*,type FROM module a,recommend_module b WHERE a.id = b.module_id ORDER BY b.reco_time DESC LIMIT 3
  </select>

  <select id="selectModulePresent" resultMap="PresentModule">
    SELECT a.id AS id, a.module_id AS module_id, a.type AS TYPE, a.reco_time AS reco_time, b.id AS part_id FROM recommend_module AS a, part AS b, module AS c WHERE a.module_id = c.id AND c.part_id = b.id;
  </select>

  <select id="confirmById" resultType="Integer">
    SELECT COUNT(*) FROM recommend_module WHERE id = #{id};
  </select>

  <select id="confirmModule" resultType="Integer">
    SELECT COUNT(*) FROM recommend_module WHERE module_id = #{moduleId} AND TYPE = #{type} AND id != #{id};
  </select>

  <update id="updateById">
    UPDATE recommend_module SET module_id = #{moduleId}, reco_time = #{recoTime} WHERE id = #{id};
  </update>

</mapper>