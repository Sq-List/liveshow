<?xml version="1.0" encoding="UTF-8" ?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd" >
<mapper namespace="org.liveshow.dao.RoomMapper">
	<resultMap id="BaseResultMap" type="org.liveshow.entity.Room">
		<constructor>
			<idArg column="id" jdbcType="INTEGER" javaType="java.lang.Integer"/>
			<arg column="user_id" jdbcType="INTEGER" javaType="java.lang.Integer"/>
			<arg column="name" jdbcType="VARCHAR" javaType="java.lang.String"/>
			<arg column="stream_code" jdbcType="VARCHAR" javaType="java.lang.String"/>
			<arg column="notice" jdbcType="VARCHAR" javaType="java.lang.String"/>
			<arg column="photo" jdbcType="VARCHAR" javaType="java.lang.String"/>
			<arg column="module_id" jdbcType="INTEGER" javaType="java.lang.Integer"/>
			<arg column="switch_judge" jdbcType="BIT" javaType="java.lang.Boolean"/>
			<arg column="most_popular" jdbcType="INTEGER" javaType="java.lang.Integer"/>
		</constructor>
	</resultMap>
	<sql id="Example_Where_Clause">
		<where>
			<foreach collection="oredCriteria" item="criteria" separator="or">
				<if test="criteria.valid">
					<trim prefix="(" suffix=")" prefixOverrides="and">
						<foreach collection="criteria.criteria" item="criterion">
							<choose>
								<when test="criterion.noValue">
									and ${criterion.condition}
								</when>
								<when test="criterion.singleValue">
									and ${criterion.condition} #{criterion.value}
								</when>
								<when test="criterion.betweenValue">
									and ${criterion.condition} #{criterion.value} and #{criterion.secondValue}
								</when>
								<when test="criterion.listValue">
									and ${criterion.condition}
									<foreach collection="criterion.value" item="listItem" open="(" close=")"
									         separator=",">
										#{listItem}
									</foreach>
								</when>
							</choose>
						</foreach>
					</trim>
				</if>
			</foreach>
		</where>
	</sql>
	<sql id="Update_By_Example_Where_Clause">
		<where>
			<foreach collection="example.oredCriteria" item="criteria" separator="or">
				<if test="criteria.valid">
					<trim prefix="(" suffix=")" prefixOverrides="and">
						<foreach collection="criteria.criteria" item="criterion">
							<choose>
								<when test="criterion.noValue">
									and ${criterion.condition}
								</when>
								<when test="criterion.singleValue">
									and ${criterion.condition} #{criterion.value}
								</when>
								<when test="criterion.betweenValue">
									and ${criterion.condition} #{criterion.value} and #{criterion.secondValue}
								</when>
								<when test="criterion.listValue">
									and ${criterion.condition}
									<foreach collection="criterion.value" item="listItem" open="(" close=")"
									         separator=",">
										#{listItem}
									</foreach>
								</when>
							</choose>
						</foreach>
					</trim>
				</if>
			</foreach>
		</where>
	</sql>
	<sql id="Base_Column_List">
    id, user_id, name, stream_code, notice, photo, module_id, switch_judge, most_popular
  </sql>
	<select id="selectByExample" resultMap="BaseResultMap" parameterType="org.liveshow.entity.RoomExample">
		select
		<if test="distinct">
			distinct
		</if>
		<include refid="Base_Column_List"/>
		from room
		<if test="_parameter != null">
			<include refid="Example_Where_Clause"/>
		</if>
		<if test="orderByClause != null">
			order by ${orderByClause}
		</if>
	</select>
	<select id="selectByPrimaryKey" resultMap="BaseResultMap" parameterType="java.lang.Integer">
		select
		<include refid="Base_Column_List"/>
		from room
		where id = #{id,jdbcType=INTEGER}
	</select>
	<delete id="deleteByPrimaryKey" parameterType="java.lang.Integer">
    delete from room
    where id = #{id,jdbcType=INTEGER}
  </delete>
	<delete id="deleteByExample" parameterType="org.liveshow.entity.RoomExample">
		delete from room
		<if test="_parameter != null">
			<include refid="Example_Where_Clause"/>
		</if>
	</delete>
	<insert id="insert" parameterType="org.liveshow.entity.Room">
    insert into room (id, user_id, name, 
      stream_code, notice, photo, 
      module_id, switch_judge, most_popular
      )
    values (#{id,jdbcType=INTEGER}, #{userId,jdbcType=INTEGER}, #{name,jdbcType=VARCHAR}, 
      #{streamCode,jdbcType=VARCHAR}, #{notice,jdbcType=VARCHAR}, #{photo,jdbcType=VARCHAR}, 
      #{moduleId,jdbcType=INTEGER}, #{switchJudge,jdbcType=BIT}, #{mostPopular,jdbcType=INTEGER}
      )
  </insert>
	<insert id="insertSelective" parameterType="org.liveshow.entity.Room">
		insert into room
		<trim prefix="(" suffix=")" suffixOverrides=",">
			<if test="id != null">
				id,
			</if>
			<if test="userId != null">
				user_id,
			</if>
			<if test="name != null">
				name,
			</if>
			<if test="streamCode != null">
				stream_code,
			</if>
			<if test="notice != null">
				notice,
			</if>
			<if test="photo != null">
				photo,
			</if>
			<if test="moduleId != null">
				module_id,
			</if>
			<if test="switchJudge != null">
				switch_judge,
			</if>
			<if test="mostPopular != null">
				most_popular,
			</if>
		</trim>
		<trim prefix="values (" suffix=")" suffixOverrides=",">
			<if test="id != null">
				#{id,jdbcType=INTEGER},
			</if>
			<if test="userId != null">
				#{userId,jdbcType=INTEGER},
			</if>
			<if test="name != null">
				#{name,jdbcType=VARCHAR},
			</if>
			<if test="streamCode != null">
				#{streamCode,jdbcType=VARCHAR},
			</if>
			<if test="notice != null">
				#{notice,jdbcType=VARCHAR},
			</if>
			<if test="photo != null">
				#{photo,jdbcType=VARCHAR},
			</if>
			<if test="moduleId != null">
				#{moduleId,jdbcType=INTEGER},
			</if>
			<if test="switchJudge != null">
				#{switchJudge,jdbcType=BIT},
			</if>
			<if test="mostPopular != null">
				#{mostPopular,jdbcType=INTEGER},
			</if>
		</trim>
	</insert>
	<select id="countByExample" parameterType="org.liveshow.entity.RoomExample" resultType="java.lang.Integer">
		select count(*) from room
		<if test="_parameter != null">
			<include refid="Example_Where_Clause"/>
		</if>
	</select>
	<update id="updateByExampleSelective" parameterType="map">
		update room
		<set>
			<if test="record.id != null">
				id = #{record.id,jdbcType=INTEGER},
			</if>
			<if test="record.userId != null">
				user_id = #{record.userId,jdbcType=INTEGER},
			</if>
			<if test="record.name != null">
				name = #{record.name,jdbcType=VARCHAR},
			</if>
			<if test="record.streamCode != null">
				stream_code = #{record.streamCode,jdbcType=VARCHAR},
			</if>
			<if test="record.notice != null">
				notice = #{record.notice,jdbcType=VARCHAR},
			</if>
			<if test="record.photo != null">
				photo = #{record.photo,jdbcType=VARCHAR},
			</if>
			<if test="record.moduleId != null">
				module_id = #{record.moduleId,jdbcType=INTEGER},
			</if>
			<if test="record.switchJudge != null">
				switch_judge = #{record.switchJudge,jdbcType=BIT},
			</if>
			<if test="record.mostPopular != null">
				most_popular = #{record.mostPopular,jdbcType=INTEGER},
			</if>
		</set>
		<if test="_parameter != null">
			<include refid="Update_By_Example_Where_Clause"/>
		</if>
	</update>
	<update id="updateByExample" parameterType="map">
		update room
		set id = #{record.id,jdbcType=INTEGER},
		user_id = #{record.userId,jdbcType=INTEGER},
		name = #{record.name,jdbcType=VARCHAR},
		stream_code = #{record.streamCode,jdbcType=VARCHAR},
		notice = #{record.notice,jdbcType=VARCHAR},
		photo = #{record.photo,jdbcType=VARCHAR},
		module_id = #{record.moduleId,jdbcType=INTEGER},
		switch_judge = #{record.switchJudge,jdbcType=BIT},
		most_popular = #{record.mostPopular,jdbcType=INTEGER}
		<if test="_parameter != null">
			<include refid="Update_By_Example_Where_Clause"/>
		</if>
	</update>
	<update id="updateByPrimaryKeySelective" parameterType="org.liveshow.entity.Room">
		update room
		<set>
			<if test="userId != null">
				user_id = #{userId,jdbcType=INTEGER},
			</if>
			<if test="name != null">
				name = #{name,jdbcType=VARCHAR},
			</if>
			<if test="streamCode != null">
				stream_code = #{streamCode,jdbcType=VARCHAR},
			</if>
			<if test="notice != null">
				notice = #{notice,jdbcType=VARCHAR},
			</if>
			<if test="photo != null">
				photo = #{photo,jdbcType=VARCHAR},
			</if>
			<if test="moduleId != null">
				module_id = #{moduleId,jdbcType=INTEGER},
			</if>
			<if test="switchJudge != null">
				switch_judge = #{switchJudge,jdbcType=BIT},
			</if>
			<if test="mostPopular != null">
				most_popular = #{mostPopular,jdbcType=INTEGER},
			</if>
		</set>
		where id = #{id,jdbcType=INTEGER}
	</update>
	<update id="updateByPrimaryKey" parameterType="org.liveshow.entity.Room">
    update room
    set user_id = #{userId,jdbcType=INTEGER},
      name = #{name,jdbcType=VARCHAR},
      stream_code = #{streamCode,jdbcType=VARCHAR},
      notice = #{notice,jdbcType=VARCHAR},
      photo = #{photo,jdbcType=VARCHAR},
      module_id = #{moduleId,jdbcType=INTEGER},
      switch_judge = #{switchJudge,jdbcType=BIT},
      most_popular = #{mostPopular,jdbcType=INTEGER}
    where id = #{id,jdbcType=INTEGER}
  </update>

	<select id="findRecoRoom" resultType="org.liveshow.entity.CombinationEntity.RoomAndOwner">
    SELECT * FROM room a, `user` b WHERE a.user_id =  b.id  AND a.module_id  =#{moduleId} AND a.switch_judge = 1 AND  NOT EXISTS(SELECT * FROM darkroom_room d WHERE d.room_id = a.id AND (d.time + d.hours > unix_timestamp(now()) AND state = 0)) ORDER BY a.most_popular DESC LIMIT #{pageNo},#{pageSize}

    </select>

	<select id="findRoomById" resultType="org.liveshow.entity.CombinationEntity.RoomAndOwner">
    SELECT * FROM room a, `user` b WHERE a.user_id =  b.id AND  NOT EXISTS(SELECT * FROM darkroom_room d WHERE d.room_id = a.id AND (d.time + d.hours > unix_timestamp(now()) AND state = 0 ))  AND a.id = #{roomId}
  </select>

  <select id="getAllRoom" resultMap="BaseResultMap">
    SELECT * FROM room;
  </select>

  <select id="getRoomByPart" resultMap="BaseResultMap">
    SELECT * FROM room WHERE module_id IN (SELECT id FROM module WHERE part_id = #{partId});
  </select>

	<resultMap id="RoomWithModule" type="org.liveshow.entity.Room">
		<id column="id" jdbcType="INTEGER" property="id"/>
		<result column="user_id" jdbcType="INTEGER" property="userId"/>
		<result column="name" jdbcType="VARCHAR" property="name"/>
		<result column="stream_code" jdbcType="VARCHAR" property="streamCode"/>
		<result column="notice" jdbcType="VARCHAR" property="notice"/>
		<result column="photo" jdbcType="VARCHAR" property="photo"/>
		<result column="switch_judge" jdbcType="BIT" property="switchJudge"/>
		<result column="most_popular" jdbcType="INTEGER" property="mostPopular"/>

		<association property="module" resultMap="Module"/>
	</resultMap>

	<resultMap id="Module" type="org.liveshow.entity.Module">
		<id column="module_id" jdbcType="INTEGER" property="id"/>
		<result column="module_name" jdbcType="VARCHAR" property="name"/>

		<association property="part" resultMap="Part"/>
	</resultMap>

	<resultMap id="Part" type="org.liveshow.entity.Part">
		<id column="part_id" jdbcType="INTEGER" property="id"/>
		<result column="part_name" jdbcType="VARCHAR" property="name"/>
	</resultMap>

	<select id="selectByUserIdWithModule" resultMap="RoomWithModule">
		SELECT
			room.*,
			module.id module_id,
			module.`name` module_name,
			part.id part_id,
			part.`name` part_name
		FROM
			room,
			module,
			part
		WHERE
			room.module_id = module.id
		AND
			module.part_id = part.id
		AND
			room.user_id = #{userId}
	</select>

	<update id="updateRoomWithoutSwitchJudge" parameterType="org.liveshow.entity.Room">
		update room
		<set>
			<if test="name != null">
				name = #{name,jdbcType=VARCHAR},
			</if>
			<if test="streamCode != null">
				stream_code = #{streamCode,jdbcType=VARCHAR},
			</if>
			<if test="notice != null">
				notice = #{notice,jdbcType=VARCHAR},
			</if>
			<if test="photo != null">
				photo = #{photo,jdbcType=VARCHAR},
			</if>
			<if test="moduleId != 0">
				module_id = #{moduleId,jdbcType=INTEGER},
			</if>
		</set>
		where id = #{id,jdbcType=INTEGER}
	</update>
</mapper>
