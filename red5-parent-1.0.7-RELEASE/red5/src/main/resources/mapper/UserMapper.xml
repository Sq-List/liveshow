<?xml version="1.0" encoding="UTF-8" ?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd" >
<mapper namespace="org.liveshow.dao.UserMapper">
	<resultMap id="BaseResultMap" type="org.liveshow.entity.User">
		<constructor>
			<idArg column="id" jdbcType="INTEGER" javaType="java.lang.Integer"/>
			<arg column="password" jdbcType="VARCHAR" javaType="java.lang.String"/>
			<arg column="login_name" jdbcType="VARCHAR" javaType="java.lang.String"/>
			<arg column="nick_name" jdbcType="VARCHAR" javaType="java.lang.String"/>
			<arg column="type" jdbcType="INTEGER" javaType="java.lang.Integer"/>
		</constructor>
	</resultMap>
	<sql id="Example_Where_Clause">
		<where>
			<foreach collection="oredCriteria" item="criteria" separator="or">
				<if test="criteria.valid">
					<trim prefix="(" suffix=")" prefixOverrides="and">
						<foreach collection="criteria.criteria" item="criterion">
							<choose>
								<when test="criterion.noValue">
									and ${criterion.condition}
								</when>
								<when test="criterion.singleValue">
									and ${criterion.condition} #{criterion.value}
								</when>
								<when test="criterion.betweenValue">
									and ${criterion.condition} #{criterion.value} and #{criterion.secondValue}
								</when>
								<when test="criterion.listValue">
									and ${criterion.condition}
									<foreach collection="criterion.value" item="listItem" open="(" close=")"
									         separator=",">
										#{listItem}
									</foreach>
								</when>
							</choose>
						</foreach>
					</trim>
				</if>
			</foreach>
		</where>
	</sql>
	<sql id="Update_By_Example_Where_Clause">
		<where>
			<foreach collection="example.oredCriteria" item="criteria" separator="or">
				<if test="criteria.valid">
					<trim prefix="(" suffix=")" prefixOverrides="and">
						<foreach collection="criteria.criteria" item="criterion">
							<choose>
								<when test="criterion.noValue">
									and ${criterion.condition}
								</when>
								<when test="criterion.singleValue">
									and ${criterion.condition} #{criterion.value}
								</when>
								<when test="criterion.betweenValue">
									and ${criterion.condition} #{criterion.value} and #{criterion.secondValue}
								</when>
								<when test="criterion.listValue">
									and ${criterion.condition}
									<foreach collection="criterion.value" item="listItem" open="(" close=")"
									         separator=",">
										#{listItem}
									</foreach>
								</when>
							</choose>
						</foreach>
					</trim>
				</if>
			</foreach>
		</where>
	</sql>
	<sql id="Base_Column_List">
    id, password, login_name, nick_name, type
  </sql>
	<select id="selectByExample" resultMap="BaseResultMap" parameterType="org.liveshow.entity.UserExample">
		select
		<if test="distinct">
			distinct
		</if>
		<include refid="Base_Column_List"/>
		from user
		<if test="_parameter != null">
			<include refid="Example_Where_Clause"/>
		</if>
		<if test="orderByClause != null">
			order by ${orderByClause}
		</if>
	</select>
	<select id="selectByPrimaryKey" resultMap="BaseResultMap" parameterType="java.lang.Integer">
		select
		<include refid="Base_Column_List"/>
		from user
		where id = #{id,jdbcType=INTEGER}
	</select>
	<delete id="deleteByPrimaryKey" parameterType="java.lang.Integer">
    delete from user
    where id = #{id,jdbcType=INTEGER}
  </delete>
	<delete id="deleteByExample" parameterType="org.liveshow.entity.UserExample">
		delete from user
		<if test="_parameter != null">
			<include refid="Example_Where_Clause"/>
		</if>
	</delete>
	<insert id="insert" parameterType="org.liveshow.entity.User">
    insert into user (id, password, login_name, 
      nick_name, type)
    values (#{id,jdbcType=INTEGER}, #{password,jdbcType=VARCHAR}, #{loginName,jdbcType=VARCHAR}, 
      #{nickName,jdbcType=VARCHAR}, #{type,jdbcType=INTEGER})
  </insert>
	<insert id="insertSelective" parameterType="org.liveshow.entity.User">
		insert into user
		<trim prefix="(" suffix=")" suffixOverrides=",">
			<if test="id != null">
				id,
			</if>
			<if test="password != null">
				password,
			</if>
			<if test="loginName != null">
				login_name,
			</if>
			<if test="nickName != null">
				nick_name,
			</if>
			<if test="type != null">
				type,
			</if>
		</trim>
		<trim prefix="values (" suffix=")" suffixOverrides=",">
			<if test="id != null">
				#{id,jdbcType=INTEGER},
			</if>
			<if test="password != null">
				#{password,jdbcType=VARCHAR},
			</if>
			<if test="loginName != null">
				#{loginName,jdbcType=VARCHAR},
			</if>
			<if test="nickName != null">
				#{nickName,jdbcType=VARCHAR},
			</if>
			<if test="type != null">
				#{type,jdbcType=INTEGER},
			</if>
		</trim>
	</insert>
	<select id="countByExample" parameterType="org.liveshow.entity.UserExample" resultType="java.lang.Integer">
		select count(*) from user
		<if test="_parameter != null">
			<include refid="Example_Where_Clause"/>
		</if>
	</select>
	<update id="updateByExampleSelective" parameterType="map">
		update user
		<set>
			<if test="record.id != null">
				id = #{record.id,jdbcType=INTEGER},
			</if>
			<if test="record.password != null">
				password = #{record.password,jdbcType=VARCHAR},
			</if>
			<if test="record.loginName != null">
				login_name = #{record.loginName,jdbcType=VARCHAR},
			</if>
			<if test="record.nickName != null">
				nick_name = #{record.nickName,jdbcType=VARCHAR},
			</if>
			<if test="record.type != null">
				type = #{record.type,jdbcType=INTEGER},
			</if>
		</set>
		<if test="_parameter != null">
			<include refid="Update_By_Example_Where_Clause"/>
		</if>
	</update>
	<update id="updateByExample" parameterType="map">
		update user
		set id = #{record.id,jdbcType=INTEGER},
		password = #{record.password,jdbcType=VARCHAR},
		login_name = #{record.loginName,jdbcType=VARCHAR},
		nick_name = #{record.nickName,jdbcType=VARCHAR},
		type = #{record.type,jdbcType=INTEGER}
		<if test="_parameter != null">
			<include refid="Update_By_Example_Where_Clause"/>
		</if>
	</update>
	<update id="updateByPrimaryKeySelective" parameterType="org.liveshow.entity.User">
		update user
		<set>
			<if test="password != null">
				password = #{password,jdbcType=VARCHAR},
			</if>
			<if test="loginName != null">
				login_name = #{loginName,jdbcType=VARCHAR},
			</if>
			<if test="nickName != null">
				nick_name = #{nickName,jdbcType=VARCHAR},
			</if>
			<if test="type != null">
				type = #{type,jdbcType=INTEGER},
			</if>
		</set>
		where id = #{id,jdbcType=INTEGER}
	</update>
	<update id="updateByPrimaryKey" parameterType="org.liveshow.entity.User">
	    update user
	    set password = #{password,jdbcType=VARCHAR},
	      login_name = #{loginName,jdbcType=VARCHAR},
	      nick_name = #{nickName,jdbcType=VARCHAR},
	      type = #{type,jdbcType=INTEGER}
	    where id = #{id,jdbcType=INTEGER}
  	</update>
	<select id="selectUserByPasswordAndIdOrLoginName" parameterType="org.liveshow.entity.User" resultMap="BaseResultMap">
		SELECT *
		FROM user
		<where>
			password = #{password}
			<if test="id != null">
				AND id = #{id}
			</if>
			<if test="loginName != null">
				AND login_name = #{loginName}
			</if>
		</where>
	</select>

	<resultMap id="following" type="org.liveshow.dto.PersonalFollowingDTO">
		<result column="room_id" jdbcType="INTEGER" property="roomId"/>
		<result column="room_name" jdbcType="VARCHAR" property="roomName"/>
		<result column="care_id" jdbcType="INTEGER" property="careId"/>
		<result column="photo" jdbcType="VARCHAR" property="livePhoto"/>
		<result column="nick_name" jdbcType="VARCHAR" property="nickName"/>
		<result column="switch_judge" jdbcType="TINYINT" property="liveState"/>
		<result column="module_id" jdbcType="INTEGER" property="moduleId"/>
		<result column="module_name" jdbcType="VARCHAR" property="moduleName"/>
	</resultMap>

	<select id="selectFollowingByUserId" resultMap="following">
		SELECT
			module.id module_id,
			module.`name` module_name,
			room.id room_id,
			room.`name` room_name,
			room.switch_judge,
			room.photo,
			care.id care_id,
			`user`.*
		FROM
			care,
			module,
			room,
			`user`
		WHERE
			care.room_id = room.id
		AND
			room.user_id = `user`.id
		AND
			room.module_id = module.id
		AND
			care.user_id = #{id}
	</select>
</mapper>
